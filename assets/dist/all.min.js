const MEDIA_SIZE={XL_MIN:1280,LG_MIN:1024,MD_MIN:769,XS_MIN:641,XXS_MIN:300},DATA_GOV_API={STORE_URL:"assets/data/ura-zones/"},DOS_TABLE_API={BASE_URL:"https://tablebuilder.singstat.gov.sg/api/table/tabledata/",STORE_URL:"assets/data/dos-tables/",ANNUAL_POP_IDS:{indicators:"M810001",categories:"M810011"},GEO_DISTRI_IDS:{ageGroup:"17560",ethnicGroup:"17561",qualification:"17568",grossIncome:"17571",travelTime:"17573",dwellingType:"17574",tenancyType:"17575",literacy:"17591",occupation:"17593",transportMode:"17594"}},AP_DATA_KEYS={CITIZEN_PPLT:"singapore_citizen_population",PR_PPLT:"permanent_resident_population",NON_RES_PPLT:"non-resident_population",TOTAL_PPLT:"total_population",RATE_NATURAL_INCR:"rate_of_natural_increase",TOTAL_PPLT_GROWTH:"total_population_growth",MED_AGE_CITIZEN:"median_age_of_citizen_population",MED_AGE_RESIDENT:"median_age_of_resident_population",AGE_DEP_15_64:"age_dependency_ratio:_residents_aged_under_15_years_and_65_years_per_hundred_residents_aged_15-64_years",AGE_DEP_20_64:"age_dependency_ratio:_residents_aged_under_20_years_and_65_years_&_over_per_hundred_residents_aged_20-64_years",CHILD_DEP_15_64:"child_dependency_ratio:_residents_aged_under_15_years_per_hundred_residents_aged_15-64_years",CHILD_DEP_20_64:"child_dependency_ratio:_residents_aged_under_20_years_per_hundred_residents_aged_20-64_years",OLD_DEP_15_64:"old-age_dependency_ratio:_residents_aged_65_years_&_over_per_hundred_residents_aged_15-64_years",OLD_DEP_20_64:"old-age_dependency_ratio:_residents_aged_65_years_&_over_per_hundred_residents_aged_20-64_years",TOTAL_MALE:"total_male_residents",TOTAL_MALE_AGE:"total_male_residents_age_breakdown",TOTAL_FEMALE:"total_female_residents",TOTAL_FEMALE_AGE:"total_female_residents_age_breakdown",SEX_RATIO:"sex_ratio",TOTAL_CHINESE:"total_chinese",TOTAL_MALAYS:"total_malays",TOTAL_INDIANS:"total_indians",TOTAL_OTHER_ETHN:"other_ethnic_groups_(total)"},GD_DATA_KEYS={POPULATION:"population",AGE_GROUP:"ageGroup",ETHNIC_GROUP:"ethnicGroup",GENDER_POP:"genderPopulation",DISPLAY_NAME:"display_name",TOTAL:"Total",FEMALES:"Females",MALES:"Males",CONDO_OTH:"Condominiums and Other Apartments",HDB_DWELL:"HDB Dwellings",LANDED_PROP:"Landed Properties",OTHERS:"Others",CHINESE:"Chinese",MALAYS:"Malays",INDIANS:"Indians",OTHERS:"Others",OWNER_OCCUPIED:"Owner-Occupied",RENTED:"Rented",NO_QUALIFICATION:"No Qualification",PRIMARY:"Primary",LOW_SEC:"Lower Secondary",SECONDARY:"Secondary",POST_SEC:"Post-Secondary (Non-Tertiary)",POLYTECHNIC:"Polytechnic Diploma",PROFESSIONAL:"Professional Qualification and Other Diploma",UNIVERSITY:"University",NOT_LIT:"Not Literate",LIT:"Literate",ONE_LANG:"One Language Only",TWO_LANG:"Two Languages Only",THREE_LANG:"Three or More Languages",ASC_PROF_TECH:"Associate Professionals & Technicians",LABOUR_WORKERS:"Cleaners, Labourers & Related Workers",CLERICAL_WORLKERS:"Clerical Support Workers",TRADE_WORKERS:"Craftsmen & Related Trades Workers",LEGISLATORS_MANAGERS:"Legislators, Senior Officials & Managers",OTHERS_1:"Others1/",MACHINE_OPERATORS:"Plant & Machine Operators & Assemblers",PROF:"Professionals",SERVICE_WORKERS:"Service & Sales Workers",BELOW_1K:"Below $1,000",BELOW_2K:"$1,000 - $1,999",BELOW_3K:"$2,000 - $2,999",BELOW_4K:"$3,000 - $3,999",BELOW_5K:"$4,000 - $4,999",BELOW_6K:"$5,000 - $5,999",BELOW_7K:"$6,000 - $6,999",BELOW_8K:"$7,000 - $7,999",BELOW_9K:"$8,000 - $8,999",BELOW_10K:"$9,000 - $9,999",BELOW_11K:"$10,000 - 10,999",BELOW_12K:"$11,000 - 11,999",BELOW_15K:"$12,000 - $14,999",OVER_15K:"$15,000 & Over",CAR:"Car Only",LORRY_PICKUP:"Lorry/Pickup Only",MRT_LRT_BUS:"MRT/LRT & Public Bus Only",MRT_LRT:"MRT/LRT Only",MOTORCYCLE_SCOOTER:"Motorcycle/\nScooter Only",NO_TRANSPORT_REQ:"No Transport Required",OTHER_MRT_LRT_BUS:"Other combinations of MRT/LRT or Public Bus",PRIVATE_BUS_VAN:"Private Chartered Bus/Van Only",PUBLIC_BUS:"Public Bus Only",PRIVATE_HIRE_CAR:"Taxi/Private Hire Car Only",MINS_15:"Up to 15 mins",MINS_30:"16 - 30 mins",MINS_45:"31 - 45 mins",MINS_60:"46 - 60 mins",MINS_OVER_60:"More than 60 mins"},CHART_CONF={COLOR_RANGE:["#BF6967","#5A70A6","#ED7D36","#9B9A9A","#A83A51","#362B34","#47919A","#787073"],CAT_RESIDENTS:"residents",CAT_HOUSING:"housing",CAT_EDUCATION:"education",CAT_EMPLOYED:"employed",GROUP_RESIDENCY:"residency",GROUP_MEDAGE:"medage",GROUP_CP_TENANCY:"compare-tenancy"},CHART_TYPES={AREA:"area",BAR:"bar",BOX_PLOT:"boxPlot",BUBBLE:"bubble",COLUMN:"column",DONUT:"donut",HEAT_MAP:"heatmap",LINE:"line",PIE:"pie",POLAR_AREA:"polarArea",RADAR:"radar",RADIAL_BAR:"radialBar",TREE_MAP:"treemap"},CHART_LABELS={TOTAL:"Total",POPULATION:"Population",CITIZEN:"Citizen",RESIDENT:"Resident",PR:"Permanent Resident",NON_RES:"Non-Resident",RATE_NATURAL_INCR:"Rate of Natural Increase",RATE_POPLT_INCR:"Rate of Population Growth",MEDIAN_AGE:"Median Age",AGE_DEP_15_64:"Age Dependency: < 15 and 60 years old per 100 aged 15-64 years",AGE_DEP_20_64:"Age Dependency: < 15 and 60 years old per 100 aged 20-64 years",CHILD_DEP_15_64:"Child Dependency: < 15 years old per 100 aged 15-64 years",CHILD_DEP_20_64:"Child Dependency: < 20 years old per 100 aged 20-64 years",OLD_DEP_15_64:"Old Age Dependency: > 65 years old per 100 aged 15-64 years",OLD_DEP_20_64:"Old Age Dependency: > 65 years old per 100 aged 20-64 years",MALE:"Male",FEMALE:"Female",GENDER_RATIO:"Gender Ratio",CHINESE:"Chinese",MALAYS:"Malays",INDIANS:"Indians",OTHERS:"Others",CONDO:"Condo/Apartments",HDB:"HDB",LANDED:"Landed",NONE:"None",OWNER:"Owner",RENTED:"Rented",PRIMARY:"Primary",LOW_SEC:"Lower Sec.",SECONDARY:"Secondary",POLYTECHNIC:"Polytechnic",POST_SEC:"Post Sec.",PROFESSIONAL:"Professional",UNIVERSITY:"University",LITERATE:"Literate",NOT_LIT:"Not Literate",LIT_ONE:"1 Language",LIT_TWO:"2 Languages",LIT_THREE:">= 3 Languages",ASC_PROF_TECH:["Associate Professionals","& Technicians"],LABOUR_WORKERS:["Cleaners, Labourers","& Related Workers"],CLERICAL_WORLKERS:["Clerical Support","Workers"],TRADE_WORKERS:["Craftsmen & Related","Trades Workers"],LEGISLATORS_MANAGERS:["Legislators, Senior","Officials & Managers"],MACHINE_OPERATORS:["Plant & Machine","Operators & Assemblers"],PROF:"Professionals",CAR:"Car",LORRY:"Lorry",TRAIN_BUS:"Train & Public Bus",TRAIN:"Train",MOTORCYCLE:"Motorcycle",TRAIN_BUS_OTHERS:["Train or Public Bus","with Others"],PRIVATE_BUS:"Private Bus",PUBLIC_BUS:"Public Bus",PRIVATE_HIRE_CAR:"Private Hire Car",NO_TRANSPORT_REQ:["No Transport","Required"],MINS_15:"<= 15m",MINS_30:"<= 30m",MINS_45:"<= 45m",MINS_60:"<= 60m",MINS_OVER_60:"> 60m"},MAP_CONF={ZOOM_INITIAL:12.4,DEFAULT_BORDER_COLOR:"grey",HOVER_BORDER_COLOR:"#F6AE2D",CLICK_BORDER_COLOR:"#E73340",COLOR_RANGE:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],COLOR_NULL:"#f6f0ed"},ELEMENT_IDS={LOADER:"loader",SIDEBAR_CLOSE:"sidebar-close",SECT_OVERVIEW:"overview",SECT_TREND:"trend",SECT_PLAN_AREA:"plan-area",SECT_COMPARE_AREAS:"compare-areas",OVERVIEW_SEL_YEAR:"overview-sel-year",POPULATION:"population",RESIDENCY:"residency",RACE:"race",GENDER:"gender",MED_AGE:"med-age",AGE_GROUP:"age-group",TREND_SEL:"trend-sel",TREND_SEL_FROM:"trend-sel-from",TREND_SEL_TO:"trend-sel-to",TREND_CITIZEN:"trend-citizen",TREND_PR:"trend-pr",TREND_NONRES:"trend-nonres",TREND_POPINCR:"trend-popincr",TREND_MEDAGE_CITIZEN:"trend-medage-citizen",TREND_MEDAGE_RES:"trend-medage-res",TREND_DEPENDENCY:"trend-dependency",URA_ZONES_MAP:"ura-zones-map",MAP_INFO:"map-info",MAP_AREA_INFO:"area-info",GEO_AGE_GROUP:"geo-age-group",TRANS_AGE_GENDER:"trans-age-gender",GEO_AGE_GENDER:"geo-age-gender",GEO_RACE:"geo-race",GEO_EDUCATION:"geo-education",GEO_LITERACY:"geo-literacy",GEO_OCCUPATION:"geo-occupation",GEO_DWELLING:"geo-dwelling",GEO_TENANCY:"geo-tenancy",GEO_INCOME:"geo-income",GEO_TRANSPORT:"geo-transport",GEO_TRAVEL:"geo-travel",COMPARE_FORM:"compare-form",PLAN_AREAS_SEL:"plan-areas-sel",COMPARE_GENDER:"compare-gender",COMPARE_RACE:"compare-race",COMPARE_DWELLING:"compare-dwelling",COMPARE_TEN_OWNER:"compare-ten-owner",COMPARE_TEN_RENT:"compare-ten-rent",COMPARE_TEN_OTHERS:"compare-ten-others",COMPARE_EDUCATION:"compare-education",COMPARE_LITERACY:"compare-literacy",COMPARE_OCCUPATION:"compare-occupation",COMPARE_INCOME:"compare-income",COMPARE_TRANSPORT:"compare-transport",COMPARE_TRAVEL:"compare-travel"},ELEMENT_STATES={ACTIVE:"active",DISABLED:"disabled",SELECTED:"selected"},ERROR_MSG={YEAR_2:"Please select years in range of 2 or more.",YEAR_10:"Please select years in range of 10 or less.",YEAR_NEG:"Please select a valid range between 2 and 10 years.",PLAN_AREAS_2:"Please select at least 2 plan areas.",PLAN_AREAS_5:"Please select only 5 plan areas.",CAT_REQUIRED:"Please select one category."},UTIL={compareAsc:(e,E)=>E-e,compareDesc:(e,E)=>e-E,compareAlphaNumAsc:(e,E)=>e.localeCompare(E,void 0,{numeric:!0}),compareAlphaNumDesc:(e,E)=>E.localeCompare(e,void 0,{numeric:!0}),convertDOSKeys:e=>e.trim().toLowerCase().replaceAll(/\s+/g," ").replaceAll(" ","_"),getNum:e=>isNaN(e)?null:Number(e),getPercent:(e,E)=>Math.round(e/E*100),getTitleCase:e=>e.trim().toLowerCase().split(" ").map(e=>e.charAt(0).toUpperCase()+e.substring(1)).join(" "),getKeyByValue:(e,E)=>Object.keys(e).find(_=>e[_]===E),viewPortSize:()=>window.innerWidth?{width:window.innerWidth,height:window.innerHeight}:{width:document.documentElement.clientWidth,height:document.documentElement.clientHeight},dwellToggleLabel:e=>e==GD_DATA_KEYS.HDB_DWELL?CHART_LABELS.HDB:e==GD_DATA_KEYS.CONDO_OTH?CHART_LABELS.CONDO:e==GD_DATA_KEYS.LANDED_PROP?CHART_LABELS.LANDED:e==GD_DATA_KEYS.OTHERS&&CHART_LABELS.OTHERS,eduToggleLabel:e=>e==GD_DATA_KEYS.UNIVERSITY?CHART_LABELS.UNIVERSITY:e==GD_DATA_KEYS.PROFESSIONAL?CHART_LABELS.PROFESSIONAL:e==GD_DATA_KEYS.POLYTECHNIC?CHART_LABELS.POLYTECHNIC:e==GD_DATA_KEYS.POST_SEC?CHART_LABELS.POST_SEC:e==GD_DATA_KEYS.SECONDARY?CHART_LABELS.SECONDARY:e==GD_DATA_KEYS.LOW_SEC?CHART_LABELS.LOW_SEC:e==GD_DATA_KEYS.PRIMARY?CHART_LABELS.PRIMARY:e==GD_DATA_KEYS.NO_QUALIFICATION&&CHART_LABELS.NONE,litToggleLabel:e=>e==GD_DATA_KEYS.NOT_LIT?CHART_LABELS.NOT_LIT:e==GD_DATA_KEYS.ONE_LANG?CHART_LABELS.LIT_ONE:e==GD_DATA_KEYS.TWO_LANG?CHART_LABELS.LIT_TWO:e==GD_DATA_KEYS.THREE_LANG&&CHART_LABELS.LIT_THREE,incomeToggleLabel:(e,E=!1)=>{let _="";return _=E?e==GD_DATA_KEYS.BELOW_1K?999:e==GD_DATA_KEYS.BELOW_2K?1999:e==GD_DATA_KEYS.BELOW_3K?2999:e==GD_DATA_KEYS.BELOW_4K?3999:e==GD_DATA_KEYS.BELOW_5K?4999:e==GD_DATA_KEYS.BELOW_6K?5999:e==GD_DATA_KEYS.BELOW_7K?6999:e==GD_DATA_KEYS.BELOW_8K?7999:e==GD_DATA_KEYS.BELOW_9K?8999:e==GD_DATA_KEYS.BELOW_10K?9999:e==GD_DATA_KEYS.BELOW_11K?10999:e==GD_DATA_KEYS.BELOW_12K?11999:e==GD_DATA_KEYS.BELOW_15K?14999:e==GD_DATA_KEYS.OVER_15K&&15e3:999==e?GD_DATA_KEYS.BELOW_1K:1999==e?GD_DATA_KEYS.BELOW_2K:2999==e?GD_DATA_KEYS.BELOW_3K:3999==e?GD_DATA_KEYS.BELOW_4K:4999==e?GD_DATA_KEYS.BELOW_5K:5999==e?GD_DATA_KEYS.BELOW_6K:6999==e?GD_DATA_KEYS.BELOW_7K:7999==e?GD_DATA_KEYS.BELOW_8K:8999==e?GD_DATA_KEYS.BELOW_9K:9999==e?GD_DATA_KEYS.BELOW_10K:10999==e?GD_DATA_KEYS.BELOW_11K:11999==e?GD_DATA_KEYS.BELOW_12K:14999==e?GD_DATA_KEYS.BELOW_15K:15e3==e&&GD_DATA_KEYS.OVER_15K},jobsToggleLabel:e=>e==GD_DATA_KEYS.ASC_PROF_TECH?CHART_LABELS.ASC_PROF_TECH:e==GD_DATA_KEYS.LABOUR_WORKERS?CHART_LABELS.LABOUR_WORKERS:e==GD_DATA_KEYS.CLERICAL_WORLKERS?CHART_LABELS.CLERICAL_WORLKERS:e==GD_DATA_KEYS.TRADE_WORKERS?CHART_LABELS.TRADE_WORKERS:e==GD_DATA_KEYS.LEGISLATORS_MANAGERS?CHART_LABELS.LEGISLATORS_MANAGERS:e==GD_DATA_KEYS.MACHINE_OPERATORS?CHART_LABELS.MACHINE_OPERATORS:e==GD_DATA_KEYS.OTHERS_1&&CHART_LABELS.OTHERS,transportToggleLabel:e=>e==GD_DATA_KEYS.CAR?CHART_LABELS.CAR:e==GD_DATA_KEYS.LORRY_PICKUP?CHART_LABELS.LORRY:e==GD_DATA_KEYS.MRT_LRT_BUS?CHART_LABELS.TRAIN_BUS:e==GD_DATA_KEYS.MRT_LRT?CHART_LABELS.TRAIN:e==GD_DATA_KEYS.MOTORCYCLE_SCOOTER?CHART_LABELS.MOTORCYCLE:e==GD_DATA_KEYS.OTHER_MRT_LRT_BUS?CHART_LABELS.TRAIN_BUS_OTHERS:e==GD_DATA_KEYS.PRIVATE_BUS_VAN?CHART_LABELS.PRIVATE_BUS:e==GD_DATA_KEYS.PUBLIC_BUS?CHART_LABELS.PUBLIC_BUS:e==GD_DATA_KEYS.PRIVATE_HIRE_CAR?CHART_LABELS.PRIVATE_HIRE_CAR:e==GD_DATA_KEYS.NO_TRANSPORT_REQ&&CHART_LABELS.NO_TRANSPORT_REQ,travelToggleLabel:e=>e==GD_DATA_KEYS.MINS_15?CHART_LABELS.MINS_15:e==GD_DATA_KEYS.MINS_30?CHART_LABELS.MINS_30:e==GD_DATA_KEYS.MINS_45?CHART_LABELS.MINS_45:e==GD_DATA_KEYS.MINS_60?CHART_LABELS.MINS_60:e==GD_DATA_KEYS.MINS_OVER_60&&CHART_LABELS.MINS_OVER_60};async function getGeoDistributionData(){let e=[],E={};for(let E in DOS_TABLE_API.GEO_DISTRI_IDS)e.push(axios.get(DOS_TABLE_API.STORE_URL+DOS_TABLE_API.GEO_DISTRI_IDS[E]+".json"));return await Promise.all(e).then(e=>{for(let _ of e)Object.values(DOS_TABLE_API.GEO_DISTRI_IDS).includes(_.data.Data.id)&&(E[UTIL.getKeyByValue(DOS_TABLE_API.GEO_DISTRI_IDS,_.data.Data.id)]=_.data.Data.row)}).catch(e=>{console.log("Unable to get data of DOS geographical distribution data stored copies")}),E}function transformGeoDistributionData(e){function E(e,E){let _={};for(let a of e){let e=UTIL.getTitleCase(a.rowText.toLowerCase().replace("- total","").trim());for(let t of a.columns){let a=t.key,A={};if(E)for(let e of t.columns){let{key:E,value:_}=e;A[a]={...A[a],[E]:UTIL.getNum(_)}}else{if(t.hasOwnProperty("value"))value=UTIL.getNum(t.value);else if(t.hasOwnProperty("columns")){let e=t.columns.find(e=>"total"==e.key.toLowerCase());value=e?UTIL.getNum(e.value):t.columns}A={[a]:value}}_[e]={..._[e],...A}}}return _}let _={highestPopulationCount:0},a=e.ageGroup.filter(e=>e.rowText.toLowerCase().includes("total"));_.genderPopulation=E(a,!1),_.ageGroup=E(a,!0),_.ethnicGroup=E(e.ethnicGroup.filter(e=>e.rowText.toLowerCase().includes("total")),!1),_.dwellingType=E(e.dwellingType,!1),_.tenancyType=E(e.tenancyType,!1),_.grossIncome=E(e.grossIncome,!1),_.literacy=E(e.literacy,!1),_.occupation=E(e.occupation),_.qualification=E(e.qualification,!1),_.transportMode=E(e.transportMode,!1),_.travelTime=E(e.travelTime,!1);for(let e in _.genderPopulation)if("Total"!==e){let E=_.genderPopulation[e].Total;E>_.highestPopulationCount&&(_.highestPopulationCount=E)}return _}async function getAnnualPopulationData(){let e=[],E={};for(let E in DOS_TABLE_API.ANNUAL_POP_IDS)e.push(axios.get(DOS_TABLE_API.STORE_URL+DOS_TABLE_API.ANNUAL_POP_IDS[E]+".json"));return await Promise.all(e).then(e=>{for(let _ of e)Object.values(DOS_TABLE_API.ANNUAL_POP_IDS).includes(_.data.Data.id)&&(E[UTIL.getKeyByValue(DOS_TABLE_API.ANNUAL_POP_IDS,_.data.Data.id)]=_.data.Data.row)}).catch(e=>{console.log("Unable to get data of DOS annual population data stored copies")}),E}function transformAnnualPopulationData(e){let E={};for(let _ of e.indicators){let e=UTIL.convertDOSKeys(_.rowText);for(let a of _.columns){let _=a.key;E[_]={...E[_],[e]:UTIL.getNum(a.value)}}}let _=null,a=null;for(let t of e.categories){let e=UTIL.convertDOSKeys(t.rowText),A=t.SeriesNo;for(let T of t.columns){let t=T.Key;if(A.startsWith(_+".")){let _=a+"_age_breakdown";E[t][_]={...E[t][_],[e]:UTIL.getNum(T.Value)}}else E[t]={...E[t],[e]:UTIL.getNum(T.Value)}}a=A.includes(".")?a:e,_=A.includes(".")?_:A}return{ascYear:Object.keys(E).sort(UTIL.compareAlphaNumAsc),dataByYear:E}}function renderApexChart(e,E,_,a){let t={chart:{id:e,type:E,stacked:_},series:[]};a&&(t={...t,...a});let A=new ApexCharts(document.getElementById(e),t);return A.render(),A}function renderSyncApexChart(e,E){let _={chart:E,series:[]},a=new ApexCharts(document.getElementById(e),_);return a.render(),a}function doPopulationOverview(e,E){function _(e){let E=e[AP_DATA_KEYS.TOTAL_PPLT],_=[e[AP_DATA_KEYS.TOTAL_MALE],e[AP_DATA_KEYS.TOTAL_FEMALE]].map(e=>UTIL.getPercent(e,E));a[ELEMENT_IDS.GENDER].updateOptions({series:_,plotOptions:{radialBar:{dataLabels:{total:{formatter:e=>E}}}}}),a[ELEMENT_IDS.RACE].updateSeries([e[AP_DATA_KEYS.TOTAL_CHINESE],e[AP_DATA_KEYS.TOTAL_MALAYS],e[AP_DATA_KEYS.TOTAL_INDIANS],e[AP_DATA_KEYS.TOTAL_OTHER_ETHN]]),a[ELEMENT_IDS.RESIDENCY].updateSeries([e[AP_DATA_KEYS.CITIZEN_PPLT],e[AP_DATA_KEYS.PR_PPLT],e[AP_DATA_KEYS.NON_RES_PPLT]]);let t=Object.keys(e[AP_DATA_KEYS.TOTAL_FEMALE_AGE]).filter(e=>!e.includes("over")),A={dataLabels:{formatter:(e,_)=>UTIL.getPercent(Math.abs(e),E)+"%"},series:[{name:CHART_LABELS.MALE,data:t.map(E=>e[AP_DATA_KEYS.TOTAL_MALE_AGE][E])},{name:CHART_LABELS.FEMALE,data:t.map(E=>-e[AP_DATA_KEYS.TOTAL_FEMALE_AGE][E])}],tooltip:{shared:!1,x:{formatter:e=>e},y:{formatter:e=>Math.abs(e)}},xaxis:{categories:t.map(e=>e.replaceAll("_"," ").replaceAll("years","")).sort(UTIL.compareAlphaNumDesc)}};a[ELEMENT_IDS.AGE_GROUP].updateOptions(A),a[ELEMENT_IDS.MED_AGE].updateSeries([e[AP_DATA_KEYS.MED_AGE_CITIZEN],e[AP_DATA_KEYS.MED_AGE_RESIDENT]])}let a=function(){let e={};return e[ELEMENT_IDS.GENDER]=renderApexChart(ELEMENT_IDS.GENDER,CHART_TYPES.RADIAL_BAR,!1,{labels:[CHART_LABELS.MALE,CHART_LABELS.FEMALE],plotOptions:{radialBar:{dataLabels:{total:{show:!0,label:CHART_LABELS.TOTAL}}}}}),e[ELEMENT_IDS.RACE]=renderApexChart(ELEMENT_IDS.RACE,CHART_TYPES.PIE,!1,{labels:[CHART_LABELS.CHINESE,CHART_LABELS.MALAYS,CHART_LABELS.INDIANS,CHART_LABELS.OTHERS]}),e[ELEMENT_IDS.RESIDENCY]=renderApexChart(ELEMENT_IDS.RESIDENCY,CHART_TYPES.PIE,!1,{labels:[CHART_LABELS.CITIZEN,CHART_LABELS.PR,CHART_LABELS.NON_RES]}),e[ELEMENT_IDS.AGE_GROUP]=renderApexChart(ELEMENT_IDS.AGE_GROUP,CHART_TYPES.BAR,!0,{plotOptions:{bar:{horizontal:!0}},xaxis:{labels:{show:!1}},yaxis:{axisBorder:{show:!0},labels:{show:!0}}}),e[ELEMENT_IDS.MED_AGE]=renderApexChart(ELEMENT_IDS.MED_AGE,CHART_TYPES.RADIAL_BAR,!1,{labels:[CHART_LABELS.CITIZEN,CHART_LABELS.RESIDENT],plotOptions:{radialBar:{dataLabels:{value:{formatter:e=>e}}}}}),e}(),t=function(){let a=document.getElementById(ELEMENT_IDS.OVERVIEW_SEL_YEAR),t=[...e].sort(UTIL.compareAlphaNumDesc);for(let e of t){let E=document.createElement("option");E.value=e,E.innerText=e,a.appendChild(E)}return a.addEventListener("change",e=>{let a=e.target.value||0;a&&_(E[a])}),a.value}();_(E[t])}function doPopulationTrend(e,E){function _(e){function _(_){return e.map(e=>E[e][_]?E[e][_]:null)}function A(){let E=[],A=[],T=[];1==a?(A=[{name:CHART_LABELS.MALE,data:_(AP_DATA_KEYS.TOTAL_MALE),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.FEMALE,data:_(AP_DATA_KEYS.TOTAL_FEMALE),type:CHART_TYPES.COLUMN}],T=[{labels:{show:!1},seriesName:CHART_LABELS.MALE},{labels:{show:!1},seriesName:CHART_LABELS.FEMALE}]):2==a?(A=[{name:CHART_LABELS.CHINESE,data:_(AP_DATA_KEYS.TOTAL_CHINESE),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.MALAYS,data:_(AP_DATA_KEYS.TOTAL_MALAYS),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.INDIANS,data:_(AP_DATA_KEYS.TOTAL_INDIANS),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.OTHERS,data:_(AP_DATA_KEYS.TOTAL_OTHER_ETHN),type:CHART_TYPES.COLUMN}],T=[{labels:{show:!1},seriesName:CHART_LABELS.CHINESE},{labels:{show:!1},seriesName:CHART_LABELS.MALAYS},{labels:{show:!1},seriesName:CHART_LABELS.INDIANS},{labels:{show:!1},seriesName:CHART_LABELS.OTHERS}]):(A=[{name:CHART_LABELS.POPULATION,data:_(AP_DATA_KEYS.TOTAL_PPLT),type:CHART_TYPES.COLUMN}],T=[{labels:{show:!1},seriesName:CHART_LABELS.POPULATION}],a=1),A.push({name:CHART_LABELS.RATE_NATURAL_INCR,data:_(AP_DATA_KEYS.RATE_NATURAL_INCR),type:CHART_TYPES.LINE},{name:CHART_LABELS.RATE_POPLT_INCR,data:_(AP_DATA_KEYS.TOTAL_PPLT_GROWTH),type:CHART_TYPES.LINE}),T.push({labels:{show:!1},opposite:!0,seriesName:CHART_LABELS.RATE_NATURAL_INCR},{labels:{show:!1},opposite:!0,seriesName:CHART_LABELS.RATE_POPLT_INCR}),E=[A.length-2,A.length-1],t[ELEMENT_IDS.TREND_POPINCR].updateOptions({dataLabels:{enabledOnSeries:E},labels:e,series:A,yaxis:T},!0,!0)}t[ELEMENT_IDS.TREND_CITIZEN].updateOptions({labels:e,colors:[CHART_CONF.COLOR_RANGE[0]],series:[{name:CHART_LABELS.CITIZEN,data:_(AP_DATA_KEYS.CITIZEN_PPLT)}]},!0,!0,!1),t[ELEMENT_IDS.TREND_PR].updateOptions({labels:e,colors:[CHART_CONF.COLOR_RANGE[1]],series:[{name:CHART_LABELS.PR,data:_(AP_DATA_KEYS.PR_PPLT)}]},!0,!0,!1),t[ELEMENT_IDS.TREND_NONRES].updateOptions({labels:e,colors:[CHART_CONF.COLOR_RANGE[2]],series:[{name:CHART_LABELS.NON_RES,data:_(AP_DATA_KEYS.NON_RES_PPLT)}]},!0,!0,!1),t[ELEMENT_IDS.TREND_POPINCR].updateOptions({chart:{toolbar:{tools:{customIcons:[{class:"growth-toggle",click:(e,E,_)=>{A(),a=E.globals.comboBarCount},icon:'<i class="fa-solid fa-chart-column"></i>',index:2,title:"Toggle Column Type"}]}}}}),A(),t[ELEMENT_IDS.TREND_MEDAGE_RES].updateOptions({labels:e,colors:[CHART_CONF.COLOR_RANGE[3]],series:[{name:CHART_LABELS.RESIDENT,data:_(AP_DATA_KEYS.MED_AGE_RESIDENT)}]},!0,!0,!1),t[ELEMENT_IDS.TREND_MEDAGE_CITIZEN].updateOptions({labels:e,colors:[CHART_CONF.COLOR_RANGE[4]],series:[{name:CHART_LABELS.CITIZEN,data:_(AP_DATA_KEYS.MED_AGE_CITIZEN)}]},!0,!0,!1),t[ELEMENT_IDS.TREND_DEPENDENCY].updateOptions({dataLabels:{enabled:!0,enabledOnSeries:[2,3,4,5]},labels:e,series:[{name:CHART_LABELS.AGE_DEP_15_64,data:_(AP_DATA_KEYS.AGE_DEP_15_64),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.AGE_DEP_20_64,data:_(AP_DATA_KEYS.AGE_DEP_20_64),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.CHILD_DEP_15_64,data:_(AP_DATA_KEYS.CHILD_DEP_15_64),type:CHART_TYPES.LINE},{name:CHART_LABELS.CHILD_DEP_20_64,data:_(AP_DATA_KEYS.CHILD_DEP_20_64),type:CHART_TYPES.LINE},{name:CHART_LABELS.OLD_DEP_15_64,data:_(AP_DATA_KEYS.OLD_DEP_15_64),type:CHART_TYPES.LINE},{name:CHART_LABELS.OLD_DEP_20_64,data:_(AP_DATA_KEYS.OLD_DEP_20_64),type:CHART_TYPES.LINE}],yaxis:[{labels:{show:!1},seriesName:CHART_LABELS.AGE_DEP_15_64},{labels:{show:!1},seriesName:CHART_LABELS.AGE_DEP_20_64},{labels:{show:!1},opposite:!0,seriesName:CHART_LABELS.CHILD_DEP_15_64},{labels:{show:!1},opposite:!0,seriesName:CHART_LABELS.CHILD_DEP_20_64},{labels:{show:!1},seriesName:CHART_LABELS.OLD_DEP_15_64},{labels:{show:!1},opposite:!0,seriesName:CHART_LABELS.OLD_DEP_20_64}]})}let a=0,t=function(){let e={};return e[ELEMENT_IDS.TREND_CITIZEN]=renderSyncApexChart(ELEMENT_IDS.TREND_CITIZEN,{id:ELEMENT_IDS.TREND_CITIZEN,group:CHART_CONF.GROUP_RESIDENCY,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e[ELEMENT_IDS.TREND_PR]=renderSyncApexChart(ELEMENT_IDS.TREND_PR,{id:ELEMENT_IDS.TREND_PR,group:CHART_CONF.GROUP_RESIDENCY,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e[ELEMENT_IDS.TREND_NONRES]=renderSyncApexChart(ELEMENT_IDS.TREND_NONRES,{id:ELEMENT_IDS.TREND_NONRES,group:CHART_CONF.GROUP_RESIDENCY,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e[ELEMENT_IDS.TREND_POPINCR]=renderApexChart(ELEMENT_IDS.TREND_POPINCR,CHART_TYPES.AREA,!1,{xaxis:{labels:{show:!1}},yaxis:{labels:{show:!1}}}),e[ELEMENT_IDS.TREND_MEDAGE_RES]=renderSyncApexChart(ELEMENT_IDS.TREND_MEDAGE_RES,{id:ELEMENT_IDS.TREND_MEDAGE_RES,group:CHART_CONF.GROUP_MEDAGE,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e[ELEMENT_IDS.TREND_MEDAGE_CITIZEN]=renderSyncApexChart(ELEMENT_IDS.TREND_MEDAGE_CITIZEN,{id:ELEMENT_IDS.TREND_MEDAGE_CITIZEN,group:CHART_CONF.GROUP_MEDAGE,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e[ELEMENT_IDS.TREND_DEPENDENCY]=renderApexChart(ELEMENT_IDS.TREND_DEPENDENCY,CHART_TYPES.LINE,!1,{xaxis:{labels:{show:!1}},yaxis:{labels:{show:!1}}}),e}(),A=function(){let E=document.getElementById(ELEMENT_IDS.TREND_SEL),t=document.getElementById(ELEMENT_IDS.TREND_SEL_FROM),A=document.getElementById(ELEMENT_IDS.TREND_SEL_TO),T=E.querySelector("span");for(let E of e){let e=document.createElement("option");e.value=E,e.innerText=E,t.appendChild(e),A.prepend(e.cloneNode(!0))}let r=document.createElement("option"),o=document.createElement("option");return r.setAttribute("value",""),r.innerText="From",o.setAttribute("value",""),o.innerText="To",A.insertBefore(o,A.childNodes[0]),t.insertBefore(r,t.childNodes[0]),A.value=e[e.length-1],t.value=A.value-10,E.addEventListener("change",E=>{T.style.display="none",t.classList.remove("input-error"),A.classList.remove("input-error");let r=A.value-t.value;if(r<=0||r<1||r>10)t.classList.add("input-error"),A.classList.add("input-error"),T.style.display="initial",T.innerText=r>10?ERROR_MSG.YEAR_10:r<=0?ERROR_MSG.YEAR_NEG:ERROR_MSG.YEAR_2;else{let E=e.slice(e.indexOf(t.value),e.indexOf(A.value)+1);a=0,_(E)}}),[t.value,A.value]}();_(e.slice(e.indexOf(A[0]),e.indexOf(A[1])+1))}function initGeoDistrCharts(){let e={};return e[ELEMENT_IDS.GEO_AGE_GROUP]=renderApexChart(ELEMENT_IDS.GEO_AGE_GROUP,CHART_TYPES.BAR,!1,{dataLabels:{enabled:!1},plotOptions:{bar:{horizontal:!0}},xaxis:{labels:{show:!1}}}),e[ELEMENT_IDS.GEO_AGE_GENDER]=renderApexChart(ELEMENT_IDS.GEO_AGE_GENDER,CHART_TYPES.RADIAL_BAR,!1,{labels:[CHART_LABELS.MALE,CHART_LABELS.FEMALE],plotOptions:{radialBar:{dataLabels:{total:{show:!0,label:CHART_LABELS.TOTAL}}}}}),e[ELEMENT_IDS.GEO_RACE]=renderApexChart(ELEMENT_IDS.GEO_RACE,CHART_TYPES.PIE,!1,{labels:[CHART_LABELS.CHINESE,CHART_LABELS.MALAYS,CHART_LABELS.INDIANS,CHART_LABELS.OTHERS]}),e[ELEMENT_IDS.GEO_DWELLING]=renderApexChart(ELEMENT_IDS.GEO_DWELLING,CHART_TYPES.TREE_MAP,!1,{legend:{show:!1}}),e[ELEMENT_IDS.GEO_TENANCY]=renderApexChart(ELEMENT_IDS.GEO_TENANCY,CHART_TYPES.PIE,!1,{dataLabels:{enabled:!0}}),e[ELEMENT_IDS.GEO_EDUCATION]=renderApexChart(ELEMENT_IDS.GEO_EDUCATION,CHART_TYPES.RADAR,!1,{dataLabels:{enabled:!0},xaxis:{labels:{style:{colors:CHART_CONF.COLOR_RANGE,fontSize:"13px",fontFamily:"Nunito Sans,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif"}}}}),e[ELEMENT_IDS.GEO_LITERACY]=renderApexChart(ELEMENT_IDS.GEO_LITERACY,CHART_TYPES.RADIAL_BAR,!1,{plotOptions:{radialBar:{dataLabels:{total:{show:!0,label:CHART_LABELS.TOTAL}}}}}),e[ELEMENT_IDS.GEO_OCCUPATION]=renderApexChart(ELEMENT_IDS.GEO_OCCUPATION,CHART_TYPES.BAR,!1,{dataLabels:{enabled:!0},xaxis:{labels:{show:!0}},yaxis:{labels:{show:!1}}}),e[ELEMENT_IDS.GEO_INCOME]=renderApexChart(ELEMENT_IDS.GEO_INCOME,CHART_TYPES.LINE,!1,{dataLabels:{enabled:!1},xaxis:{labels:{show:!1}},yaxis:{labels:{show:!1}}}),e[ELEMENT_IDS.GEO_TRANSPORT]=renderApexChart(ELEMENT_IDS.GEO_TRANSPORT,CHART_TYPES.BAR,!1,{plotOptions:{bar:{horizontal:!0}},xaxis:{show:!1,labels:{show:!1}},yaxis:{show:!1,labels:{show:!1}}}),e[ELEMENT_IDS.GEO_TRAVEL]=renderApexChart(ELEMENT_IDS.GEO_TRAVEL,CHART_TYPES.POLAR_AREA,!1,{dataLabels:{enabled:!0}}),e}function updateGeoDistrCharts(e,E){let _=E.ageGroup,a=E.ethnicGroup,t=E.dwellingType,A=E.tenancyType,T=E.qualification,r=E.literacy,o=E.occupation,n=E.grossIncome,s=E.transportMode,L=E.travelTime,{[GD_DATA_KEYS.TOTAL]:l,[GD_DATA_KEYS.FEMALES]:i,[GD_DATA_KEYS.MALES]:S}=_,R=Object.keys(l).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL)).sort(UTIL.compareAlphaNumDesc),O={chart:{events:{dataPointSelection:(E,_,a)=>{let t=document.getElementById(ELEMENT_IDS.GEO_AGE_GROUP),A=document.getElementById(ELEMENT_IDS.TRANS_AGE_GENDER),T=a.selectedDataPoints;if(1===T[0].length){let E=R[T[0]],a=[S[E],i[E]].map(e=>UTIL.getPercent(e,l[E]));e[ELEMENT_IDS.GEO_AGE_GENDER].updateOptions({chart:{width:"30%"},plotOptions:{radialBar:{dataLabels:{total:{formatter:e=>l[E]}}}},series:a,responsive:[{breakpoint:768,options:{chart:{width:"40%"}}},{breakpoint:4e3,options:{chart:{width:"30%"}}}]}),A.classList.contains(ELEMENT_STATES.ACTIVE)||(_.updateOptions({chart:{width:"70%"},responsive:[{breakpoint:768,options:{chart:{width:"100%"}}},{breakpoint:4e3,options:{chart:{width:"70%"}}}]}),t.classList.add("gender-activated"),A.classList.add(ELEMENT_STATES.ACTIVE))}else 0===T[0].length&&(t.classList.remove("gender-activated"),A.classList.remove(ELEMENT_STATES.ACTIVE),_.updateOptions({chart:{width:"100%"}}))}},toolbar:{show:!1}},series:[{name:CHART_LABELS.POPULATION,data:R.map(e=>l[e])}],xaxis:{categories:R}};e[ELEMENT_IDS.GEO_AGE_GROUP].updateOptions(O),e[ELEMENT_IDS.GEO_RACE].updateSeries([a[GD_DATA_KEYS.CHINESE],a[GD_DATA_KEYS.MALAYS],a[GD_DATA_KEYS.INDIANS],a[GD_DATA_KEYS.OTHERS]]);let D={chart:{toolbar:{show:!1}},dataLabels:{formatter:(e,E)=>[UTIL.dwellToggleLabel(e)||e,UTIL.getPercent(E.value,t[GD_DATA_KEYS.TOTAL])+"%"]},series:[{data:Object.entries(t).map(e=>({x:e[0],y:e[1]})).filter(e=>!e.x.includes(GD_DATA_KEYS.TOTAL)&&e.y)}]};e[ELEMENT_IDS.GEO_DWELLING].updateOptions(D);let N=Object.keys(A).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));e[ELEMENT_IDS.GEO_TENANCY].updateOptions({series:N.map(e=>A[e]),labels:N});let d=Object.keys(T).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));e[ELEMENT_IDS.GEO_EDUCATION].updateOptions({series:[{name:CHART_LABELS.POPULATION,data:d.map(e=>T[e])}],xaxis:{categories:d,labels:{formatter:e=>UTIL.eduToggleLabel(e)||e}}});let C=Object.keys(r).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL)&&!e.startsWith(GD_DATA_KEYS.LIT));e[ELEMENT_IDS.GEO_LITERACY].updateOptions({labels:C.map(e=>UTIL.litToggleLabel(e)||e),plotOptions:{radialBar:{dataLabels:{total:{formatter:e=>r[GD_DATA_KEYS.TOTAL]}}}},series:C.map(e=>{let E=r[e];return E=Array.isArray(E)?E.map(e=>UTIL.getNum(e.value)).reduce((e,E)=>E+=e):E,UTIL.getPercent(E,r[GD_DATA_KEYS.TOTAL])})});let p=Object.keys(o).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));e[ELEMENT_IDS.GEO_OCCUPATION].updateOptions({dataLabels:{enabled:!0,formatter:e=>UTIL.getPercent(e,o[GD_DATA_KEYS.TOTAL])+"%"},series:[{name:CHART_LABELS.POPULATION,data:p.map(e=>o[e])}],xaxis:{categories:p.map(e=>UTIL.jobsToggleLabel(e)||e)}});let I=Object.keys(n).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));e[ELEMENT_IDS.GEO_INCOME].updateOptions({series:[{name:CHART_LABELS.POPULATION,data:I.map(e=>n[e])}],xaxis:{categories:I.map(e=>{return(e.startsWith("Over")?">= $":"<= $")+UTIL.incomeToggleLabel(e,!0)})}});let c=Object.keys(s).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));e[ELEMENT_IDS.GEO_TRANSPORT].updateOptions({series:[{name:CHART_LABELS.POPULATION,data:c.map(e=>s[e])}],dataLabels:{enabled:!0,formatter:e=>UTIL.getPercent(e,s[GD_DATA_KEYS.TOTAL])+"%"},xaxis:{categories:c.map(e=>UTIL.transportToggleLabel(e)||e)},yaxis:{show:!0}});let P=Object.keys(L).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));e[ELEMENT_IDS.GEO_TRAVEL].updateOptions({labels:P.map(e=>UTIL.travelToggleLabel(e)||e),series:P.map(e=>L[e])})}function initComparisonCharts(){let e={residents:{},housing:{},education:{},employed:{}};return e.residents[ELEMENT_IDS.COMPARE_GENDER]=renderApexChart(ELEMENT_IDS.COMPARE_GENDER,CHART_TYPES.LINE,!1,{dataLabels:{enabled:!0,enabledOnSeries:[2]}}),e.residents[ELEMENT_IDS.COMPARE_RACE]=renderApexChart(ELEMENT_IDS.COMPARE_RACE,CHART_TYPES.BAR,!0,{dataLabels:{enabled:!1},yaxis:{labels:{show:!1}}}),e.housing[ELEMENT_IDS.COMPARE_DWELLING]=renderApexChart(ELEMENT_IDS.COMPARE_DWELLING,CHART_TYPES.TREE_MAP,!1,{plotOptions:{treemap:{distributed:!1,enableShades:!0}},legend:{show:!0}}),e.housing[ELEMENT_IDS.COMPARE_TEN_OWNER]=renderSyncApexChart(ELEMENT_IDS.COMPARE_TEN_OWNER,{id:ELEMENT_IDS.COMPARE_TEN_OWNER,group:CHART_CONF.GROUP_CP_TENANCY,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e.housing[ELEMENT_IDS.COMPARE_TEN_RENT]=renderSyncApexChart(ELEMENT_IDS.COMPARE_TEN_RENT,{id:ELEMENT_IDS.COMPARE_TEN_RENT,group:CHART_CONF.GROUP_CP_TENANCY,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e.housing[ELEMENT_IDS.COMPARE_TEN_OTHERS]=renderSyncApexChart(ELEMENT_IDS.COMPARE_TEN_OTHERS,{id:ELEMENT_IDS.COMPARE_TEN_OTHERS,group:CHART_CONF.GROUP_CP_TENANCY,sparkline:{enabled:!0},type:CHART_TYPES.AREA}),e.education[ELEMENT_IDS.COMPARE_EDUCATION]=renderApexChart(ELEMENT_IDS.COMPARE_EDUCATION,CHART_TYPES.HEAT_MAP,!1,{dataLabels:{enabled:!1},yaxis:{labels:{show:!1}}}),e.education[ELEMENT_IDS.COMPARE_LITERACY]=renderApexChart(ELEMENT_IDS.COMPARE_LITERACY,CHART_TYPES.HEAT_MAP,!1,{dataLabels:{enabled:!1},yaxis:{labels:{show:!1}}}),e.employed[ELEMENT_IDS.COMPARE_OCCUPATION]=renderApexChart(ELEMENT_IDS.COMPARE_OCCUPATION,CHART_TYPES.BAR,!0,{dataLabels:{enabled:!1},plotOptions:{bar:{horizontal:!0}},xaxis:{labels:{show:!1}}}),e.employed[ELEMENT_IDS.COMPARE_INCOME]=renderApexChart(ELEMENT_IDS.COMPARE_INCOME,CHART_TYPES.BUBBLE,!0,{dataLabels:{enabled:!1},fill:{opacity:.9},xaxis:{labels:{show:!0},tickAmount:"dataPoints",type:"numeric"},yaxis:{labels:{show:!1}}}),e.employed[ELEMENT_IDS.COMPARE_TRANSPORT]=renderApexChart(ELEMENT_IDS.COMPARE_TRANSPORT,CHART_TYPES.LINE,!1,{xaxis:{labels:{show:!0}},yaxis:{labels:{show:!1}}}),e.employed[ELEMENT_IDS.COMPARE_TRAVEL]=renderApexChart(ELEMENT_IDS.COMPARE_TRAVEL,CHART_TYPES.BAR,!0,{dataLabels:{enabled:!1},plotOptions:{bar:{horizontal:!0}},xaxis:{labels:{show:!1}}}),e}function updateComparisonCharts(e,E,_,a){function t(e,_){return E.map(E=>e[E][_]?e[E][_]:null)}let A={},{genderPopulation:T,ethnicGroup:r,dwellingType:o,tenancyType:n,qualification:s,literacy:L,occupation:l,grossIncome:i,transportMode:S,travelTime:R}=_;E.sort(UTIL.compareAlphaNumAsc);for(let[e,a]of Object.entries(_))for(let _ in a)E.includes(_)&&(A[e]={...A[e],...{[_]:a[_]}});if(e===CHART_CONF.CAT_RESIDENTS)a[ELEMENT_IDS.COMPARE_GENDER].updateOptions({labels:E,series:[{name:CHART_LABELS.FEMALE,data:t(T,GD_DATA_KEYS.FEMALES),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.MALE,data:t(T,GD_DATA_KEYS.MALES),type:CHART_TYPES.COLUMN},{name:CHART_LABELS.POPULATION,data:t(T,GD_DATA_KEYS.TOTAL),type:CHART_TYPES.LINE}],yaxis:[{labels:{show:!1},seriesName:CHART_LABELS.FEMALE},{labels:{show:!1},seriesName:CHART_LABELS.MALE},{labels:{show:!1},opposite:!0,seriesName:CHART_LABELS.POPULATION}]}),a[ELEMENT_IDS.COMPARE_RACE].updateOptions({labels:E,series:[{name:CHART_LABELS.CHINESE,data:t(r,GD_DATA_KEYS.CHINESE)},{name:CHART_LABELS.MALAYS,data:t(r,GD_DATA_KEYS.MALAYS)},{name:CHART_LABELS.INDIANS,data:t(r,GD_DATA_KEYS.INDIANS)},{name:CHART_LABELS.OTHERS,data:t(r,GD_DATA_KEYS.OTHERS)}]});else if(e===CHART_CONF.CAT_HOUSING)a[ELEMENT_IDS.COMPARE_DWELLING].updateOptions({chart:{toolbar:{show:!1}},dataLabels:{formatter:(e,E)=>[UTIL.dwellToggleLabel(e)||text,E.value]},series:E.map(e=>({name:e,data:Object.entries(o[e]).map(e=>({x:e[0],y:e[1]})).filter(e=>!e.x.includes(GD_DATA_KEYS.TOTAL))}))}),a[ELEMENT_IDS.COMPARE_TEN_OWNER].updateOptions({labels:E,colors:[CHART_CONF.COLOR_RANGE[0]],series:[{name:CHART_LABELS.OWNER,data:t(n,GD_DATA_KEYS.OWNER_OCCUPIED)}]},!0,!0,!1),a[ELEMENT_IDS.COMPARE_TEN_RENT].updateOptions({labels:E,colors:[CHART_CONF.COLOR_RANGE[1]],series:[{name:CHART_LABELS.RENTED,data:t(n,GD_DATA_KEYS.RENTED)}]},!0,!0,!1),a[ELEMENT_IDS.COMPARE_TEN_OTHERS].updateOptions({labels:E,colors:[CHART_CONF.COLOR_RANGE[2]],series:[{name:CHART_LABELS.OTHERS,data:t(n,GD_DATA_KEYS.OTHERS)}]},!0,!0,!1);else if(e===CHART_CONF.CAT_EDUCATION)a[ELEMENT_IDS.COMPARE_EDUCATION].updateOptions({series:E.map(e=>({name:e,data:Object.entries(s[e]).map(e=>(e[0],{x:UTIL.eduToggleLabel(e[0])||e[0],y:e[1]})).filter(e=>!e.x.includes(GD_DATA_KEYS.TOTAL))}))},!0),a[ELEMENT_IDS.COMPARE_LITERACY].updateOptions({series:E.map(e=>({name:e,data:Object.entries(L[e]).map(e=>{let E=e[1];return E=Array.isArray(E)?E.map(e=>UTIL.getNum(e.value)).reduce((e,E)=>E+=e):E,{x:UTIL.litToggleLabel(e[0])||e[0],y:E}}).filter(e=>!e.x.includes(GD_DATA_KEYS.TOTAL)&&!e.x.startsWith(GD_DATA_KEYS.LIT))}))},!0);else if(e===CHART_CONF.CAT_EMPLOYED){let e=Object.keys(l[E[0]]).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));a[ELEMENT_IDS.COMPARE_OCCUPATION].updateOptions({labels:E,series:e.map(e=>({name:e==GD_DATA_KEYS.OTHERS_1?e.replace("1/",""):e,data:t(l,e)}))});let _=Object.keys(i[E[0]]).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));a[ELEMENT_IDS.COMPARE_INCOME].updateOptions({series:E.map(e=>({name:e,data:_.map(E=>{let _=i[e][GD_DATA_KEYS.TOTAL],a=i[e][E]||0;return[UTIL.incomeToggleLabel(E,!0),a,UTIL.getPercent(a,_)]})})),tooltip:{x:{formatter:e=>UTIL.incomeToggleLabel(e)||e},z:{formatter:e=>e+"%",title:"Population % over area: "}}});let A=Object.keys(S[E[0]]).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));a[ELEMENT_IDS.COMPARE_TRANSPORT].updateOptions({series:E.map(e=>({name:e,data:A.map(E=>S[e][E])})),xaxis:{categories:A.map(e=>UTIL.transportToggleLabel(e)||e)}});let T=Object.keys(R[E[0]]).filter(e=>!e.includes(GD_DATA_KEYS.TOTAL));a[ELEMENT_IDS.COMPARE_TRAVEL].updateOptions({labels:E,series:T.map(e=>({name:UTIL.travelToggleLabel(e)||e,data:t(R,e)}))})}}function getHeatMapColor(e,E){let _=(e-E)/e*100;return E?_>90?MAP_CONF.COLOR_RANGE[0]:_>80?MAP_CONF.COLOR_RANGE[1]:_>70?MAP_CONF.COLOR_RANGE[2]:_>50?MAP_CONF.COLOR_RANGE[3]:_>40?MAP_CONF.COLOR_RANGE[4]:_>30?MAP_CONF.COLOR_RANGE[5]:_>20?MAP_CONF.COLOR_RANGE[6]:_>10?MAP_CONF.COLOR_RANGE[7]:MAP_CONF.COLOR_RANGE[8]:MAP_CONF.COLOR_NULL}function doPlanAreaMapAndData(e,E){function _(e){let E=e.target;E.setStyle({weight:5,color:MAP_CONF.HOVER_BORDER_COLOR,dashArray:""}),E.openTooltip(),E.bringToFront()}function a(e){let E=e.target;E.options.color&&E.options.color!==MAP_CONF.CLICK_BORDER_COLOR&&E.setStyle({weight:2,color:MAP_CONF.DEFAULT_BORDER_COLOR,dashArray:"4"})}let t=omnivore.kml(DATA_GOV_API.STORE_URL+"/2019_planarea.kml"),A=initGeoDistrCharts();t.on("ready",function(){e.fitBounds(t.getBounds()),this.eachLayer(function(t){let T=t.feature.properties,r=t.feature.properties.PLN_AREA_N;for(let[e,_]of Object.entries(E))for(let E in _)E.toLowerCase()==r.toLowerCase()&&(T[e]=_[E]);T[GD_DATA_KEYS.POPULATION]=T[GD_DATA_KEYS.GENDER_POP][GD_DATA_KEYS.TOTAL]||0,T[GD_DATA_KEYS.DISPLAY_NAME]=r,t.setStyle({fillColor:getHeatMapColor(E.highestPopulationCount,T[GD_DATA_KEYS.POPULATION]),weight:2,opacity:1,color:MAP_CONF.DEFAULT_BORDER_COLOR,dashArray:"4",fillOpacity:.7}),t.bindTooltip(`<p>${T[GD_DATA_KEYS.DISPLAY_NAME]}</p>`,{className:"map-country-tooltip",permanent:!1,direction:"center"}),t.on({mouseover:_,mouseout:a,click:E=>(function(e,E,_){let a=e.target,t=a.feature.properties,A=t[GD_DATA_KEYS.POPULATION]||"No Data",T=document.getElementById(ELEMENT_IDS.MAP_AREA_INFO),r=document.querySelectorAll("#plan-area .tab-container li");E.fitBounds(a.getBounds()),T.innerHTML=`<h5>${t[GD_DATA_KEYS.DISPLAY_NAME]}</h5>\n        <p>Population: <span>${A}</span></p>`;for(let e of r)"No Data"==A?e.classList.add(ELEMENT_STATES.DISABLED):e.classList.remove(ELEMENT_STATES.DISABLED);"No Data"!==A&&updateGeoDistrCharts(_,t)})(E,e,A)})})}).addTo(e);let T=L.control({position:"topleft"});T.onAdd=function(e){let E=L.DomUtil.create("div","info"),_=L.DomUtil.create("div"),a=L.DomUtil.create("div","legend",E),t=L.DomUtil.create("div","subtitle",E);E.id=ELEMENT_IDS.MAP_INFO,t.innerText="Population Density",a.innerHTML="<span>&nbsp;&nbsp;Low&nbsp;&nbsp;</span>";for(let e of MAP_CONF.COLOR_RANGE)a.innerHTML+='<i style="background:'+e+'"></i> ';return a.innerHTML+="<span>&nbsp;&nbsp;High&nbsp;&nbsp;</span>",_.id=ELEMENT_IDS.MAP_AREA_INFO,_.innerHTML="<p>Click on plan area to see population number</p>",E.prepend(_),E},T.addTo(e)}function main(){function e(e){let E=document.getElementById(ELEMENT_IDS.LOADER);e?E.classList.add(ELEMENT_STATES.DISABLED):E.classList.remove(ELEMENT_STATES.DISABLED)}!function(){e(!1),window.Apex={colors:CHART_CONF.COLOR_RANGE,chart:{animations:{animateGradually:{enabled:!0,delay:150},dynamicAnimation:{enabled:!0,speed:350},enabled:!0,easing:"easeinout",speed:800},height:"100%",fontFamily:"Nunito Sans,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif",redrawOnParentResize:!0,redrawOnWindowResize:!0,width:"100%",zoom:{enabled:!0}},dataLabels:{dropShadow:{enabled:!0,left:1,top:1,opacity:.6}},legend:{horizontalAlign:"center",position:"bottom",show:!0},markers:{style:"hollow"},plotOptions:{bubble:{minBubbleRadius:7,maxBubbleRadius:50},radar:{polygons:{fill:["#285943"],strokeColors:"#7B9E89",strokeWidth:1.5},size:150},treemap:{distributed:!0,enableShades:!1}},responsive:[{breakpoint:640,options:{plotOptions:{radar:{size:110}}}},{breakpoint:768,options:{plotOptions:{radar:{size:130}}}},{breakpoint:4e3,options:{plotOptions:{radar:{size:180}}}}],stroke:{curve:"smooth"},theme:{palette:"palette8"}};let E=function(){let e=L.latLng(1.3552,103.7972).toBounds(28e3),E=L.map(ELEMENT_IDS.URA_ZONES_MAP,{dragging:!1,zoomControl:!1,trackResize:!0,scrollWheelZoom:!1,maxBounds:e,maxZoom:MAP_CONF.ZOOM_INITIAL+2,minZoom:MAP_CONF.ZOOM_INITIAL-3}).setView([1.3552,103.7972],MAP_CONF.ZOOM_INITIAL);return E.fitBounds(e),L.tileLayer("https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}",{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery (c) <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox/light-v10",tileSize:512,zoomOffset:-1,accessToken:"pk.eyJ1IjoiZXh0cmFrdW4iLCJhIjoiY2swdnZtMWVvMTAxaDNtcDVmOHp2c2lxbSJ9.4WxdONppGpMXeHO6rq5xvg"}).addTo(E),L.control.zoom({position:"topright"}).addTo(E),E.options.zoomControl=!0,E}();window.addEventListener("DOMContentLoaded",async function(){!function(){function e(e){document.getElementById(e).classList.add(ELEMENT_STATES.ACTIVE)}let E=document.querySelector(".tree-nav-container"),_=E.querySelectorAll("li.menu-item a"),a=document.querySelector("#plan-area .tab-container"),t=a.querySelectorAll("li"),A=document.querySelectorAll("section .trans-content .trans-head");for(let a of _)a.addEventListener("click",_=>{let t=a.dataset.target,A=document.querySelector("section.active"),T=document.querySelector("#plan-area .trans-content.active"),r=document.querySelector("#compare-areas .trans-content.active");A&&(E.querySelector("li.menu-item a.selected").classList.remove(ELEMENT_STATES.SELECTED),A.classList.remove(ELEMENT_STATES.ACTIVE)),a.classList.add(ELEMENT_STATES.SELECTED),e(t),document.getElementById(ELEMENT_IDS.SIDEBAR_CLOSE).click(),T?T.querySelector(".trans-head").click():r&&r.querySelector(".trans-head").click()});_[0].click();for(let E of t)E.addEventListener("click",_=>{let t=document.querySelector("section.active");if(t&&t.id==ELEMENT_IDS.SECT_PLAN_AREA&&!E.classList.contains(ELEMENT_STATES.DISABLED)){let _=E.dataset.target,t=a.querySelector("li.selected");t&&(document.getElementById(t.dataset.target).classList.remove(ELEMENT_STATES.ACTIVE),t.classList.remove(ELEMENT_STATES.SELECTED)),E.classList.add(ELEMENT_STATES.SELECTED),e(_)}});for(let e of A)e.addEventListener("click",E=>{let _=e.parentNode;if(_){let e=document.querySelector(`[data-target="${_.id}"]`);e&&e.classList.contains(ELEMENT_STATES.SELECTED)&&e.classList.remove(ELEMENT_STATES.SELECTED),_.classList.contains(ELEMENT_STATES.ACTIVE)&&_.classList.remove(ELEMENT_STATES.ACTIVE)}})}();let _=await async function(){return transformAnnualPopulationData(await getAnnualPopulationData())}(),a=_.ascYear.slice(-40),t=_.dataByYear;doPopulationOverview(a,t),doPopulationTrend(a,t);let A=await async function(){return transformGeoDistributionData(await getGeoDistributionData())}();doPlanAreaMapAndData(E,A),function(e,E){let _=[],a=[],t=e[GD_DATA_KEYS.GENDER_POP],A=document.getElementById(ELEMENT_IDS.COMPARE_FORM),T=document.getElementById(ELEMENT_IDS.PLAN_AREAS_SEL);for(let[e,E]of Object.entries(t))e!==GD_DATA_KEYS.TOTAL&&E.hasOwnProperty(GD_DATA_KEYS.TOTAL)&&E[GD_DATA_KEYS.TOTAL]&&(_.push({html:e,value:UTIL.convertDOSKeys(e)}),a.push(e));for(let e of _){let E=document.createElement("option");E.value=e.value,E.innerText=e.html,T.appendChild(E)}let r=new drop({options:_,selector:"#"+ELEMENT_IDS.PLAN_AREAS_SEL});A.querySelector('input[type="submit"]').addEventListener("click",_=>{let a=r.options.filter(e=>e.selected),t=A.querySelectorAll(".validation span")[0],T=A.querySelector('input[name="category"]:checked'),o=A.querySelectorAll(".validation span")[1],n=!1;if(t.style.display="none",o.style.display="none",a.length<2?(t.innerText=ERROR_MSG.PLAN_AREAS_2,t.style.display="initial",n=!0):a.length>5&&(t.innerText=ERROR_MSG.PLAN_AREAS_5,t.style.display="initial",n=!0),T||(o.innerText=ERROR_MSG.CAT_REQUIRED,o.style.display="initial",n=!0),!n){let _=T.value,t=a.map(e=>e.html);updateComparisonCharts(_,t,e,E[_]);let A=document.getElementById(T.dataset.target);A&&A.classList.add(ELEMENT_STATES.ACTIVE)}})}(A,initComparisonCharts()),e(!0)})}()}main();